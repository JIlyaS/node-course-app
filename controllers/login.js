const passport = require('passport');
const jwt = require('jsonwebtoken');
const Permission = require('../models/Permission');
// const router = require('../routes');

module.exports.login = (req, res, next) => {
  passport.authenticate('local', (err, user) => {
    if (err) {
      return next(err);
    }
    if (!user) {
      return res.status(400).json({
        message: '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å'
      });
    }

    req.logIn(user, async () => {
      console.log("üöÄ ~ file: login.js ~ line 18 ~ req.logIn ~ user", user)
      const permission = await Permission.findById({_id: String(user.permission)});
      const body = {
        _id: user.id,
        email: user.email
      };
      // –ö–æ–¥ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª—é—á –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
      const token = jwt.sign({user: body}, process.env.JWT_SECRET);
      return res.json({
        username: user.username,
        surName: user.surName,
        firstName: user.firstName,
        middleName: user.middleName,
        image: user.image,
        permission: permission.permission,
        accessToken: `Bearer ${token}`,
      });
    });
  })(req, res, next);
}
